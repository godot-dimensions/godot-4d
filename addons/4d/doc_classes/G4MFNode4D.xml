<?xml version="1.0" encoding="UTF-8" ?>
<class name="G4MFNode4D" inherits="G4MFItem4D" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../../doc/class.xsd">
	<brief_description>
		Node in the G4MF scene hierarchy.
	</brief_description>
	<description>
		G4MFNode4D represents all nodes in a G4MF file. All G4MF nodes have a transform, have an array of child nodes, and may have other data set on them.
	</description>
	<tutorials>
		<link title="G4MF Node Specification">https://github.com/godot-dimensions/g4mf/blob/main/specification/parts/node.md</link>
		<link title="G4MF Node Schema">https://github.com/godot-dimensions/g4mf/blob/main/specification/schema/g4mf.node.schema.json</link>
	</tutorials>
	<methods>
		<method name="apply_to_godot_node_4d" qualifiers="const">
			<return type="void" />
			<param index="0" name="node" type="Node4D" />
			<description>
				Sets the name, transform, visibility, and extras of the given [Node4D] to match this [G4MFNode4D].
			</description>
		</method>
		<method name="from_dictionary" qualifiers="static">
			<return type="G4MFNode4D" />
			<param index="0" name="dict" type="Dictionary" />
			<description>
				Converts the given [Dictionary] representing the JSON of a G4MF node to a [G4MFNode4D]. This will set the fields of the [G4MFNode4D] and [G4MFItem4D] classes based on the data in the [Dictionary].
			</description>
		</method>
		<method name="from_godot_node" qualifiers="static">
			<return type="G4MFNode4D" />
			<param index="0" name="g4mf_state" type="G4MFState4D" />
			<param index="1" name="godot_node" type="Node" />
			<description>
				Converts the given [Node] into a [G4MFNode4D]. This will set the fields of the [G4MFNode4D] based on the data in the [Node] for physics nodes, mesh instance nodes, and camera nodes. For all 4D nodes, this will set the transform and visibility. For all nodes, this will set the name and extras as handled by [G4MFItem4D].
			</description>
		</method>
		<method name="generate_godot_node" qualifiers="const">
			<return type="Node4D" />
			<param index="0" name="g4mf_state" type="G4MFState4D" />
			<param index="1" name="scene_parent" type="Node" />
			<param index="2" name="force_wireframe" type="bool" />
			<description>
				Generates a [Node4D] from the G4MF node data. This will consider all fields of the [G4MFNode4D] except for the [member children_indices] and [member parent_index] properties, since this does not traverse the G4MF hierarchy to generate descendant nodes. This function also does not consider any additional data provided by extensions, only the base G4MF node data. To generate a full scene and handle extensions, use [G4MFDocument4D.import_generate_godot_scene] to generate a complete scene from the [G4MFState] data.
				The [param g4mf_state] parameter is used to access [G4MFShape4D] objects when generating physics shapes, and to access [G4MFMesh4D] and [G4MFMaterial4D] objects when generating meshes. The [param p_scene_parent] parameter is only used when generating physics nodes. The [param force_wireframe] parameter is only used when generating meshes.
			</description>
		</method>
		<method name="get_scene_node_path" qualifiers="const">
			<return type="NodePath" />
			<param index="0" name="g4mf_state" type="G4MFState4D" />
			<description>
				Returns the [NodePath] that will correspond to the generated [Node4D] in the Godot scene tree that this [G4MFNode4D] will generate.
			</description>
		</method>
		<method name="to_dictionary" qualifiers="const">
			<return type="Dictionary" />
			<param index="0" name="prefer_basis" type="bool" />
			<description>
				Converts the G4MF node to a [Dictionary]. This is used for serializing the G4MF node as JSON.
			</description>
		</method>
	</methods>
	<members>
		<member name="basis" type="Projection" setter="set_basis" getter="get_basis" default="Projection(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)">
			The local (parent-relative) transformation basis of this [G4MFNode4D], representing rotation and scale.
		</member>
		<member name="camera" type="G4MFCamera4D" setter="set_camera" getter="get_camera">
			The camera of this [G4MFNode4D]. If this node is not a camera, this is [code]null[/code].
		</member>
		<member name="children_indices" type="PackedInt32Array" setter="set_children_indices" getter="get_children_indices" default="PackedInt32Array()">
			The indices of the child nodes of this [G4MFNode4D]. Each index refers to the index of a [G4MFNode4D] in the [member G4MFState4D.g4mf_nodes] array.
		</member>
		<member name="light_index" type="int" setter="set_light_index" getter="get_light_index" default="-1">
			The index of the light of this [G4MFNode4D]. This is the index of a [G4MFLight4D] in the [member G4MFState4D.g4mf_lights] array. If this node does not have a light, this is [code]-1[/code].
		</member>
		<member name="mesh_index" type="int" setter="set_mesh_index" getter="get_mesh_index" default="-1">
			The index of the mesh of this [G4MFNode4D]. This is the index of a [G4MFMesh4D] in the [member G4MFState4D.g4mf_meshes] array. If this node does not have a mesh, this is [code]-1[/code].
		</member>
		<member name="parent_index" type="int" setter="set_parent_index" getter="get_parent_index" default="-1">
			The index of the parent node of this [G4MFNode4D]. This is the index of a [G4MFNode4D] in the [member G4MFState4D.g4mf_nodes] array. If this is the root node, this is [code]-1[/code].
		</member>
		<member name="physics" type="G4MFNodePhysics4D" setter="set_physics" getter="get_physics">
			The physics data of this [G4MFNode4D]. If this node is not a physics node, this is [code]null[/code]. This contains information about the physical motion, collider shape, and trigger shape of this node.
		</member>
		<member name="position" type="Vector4" setter="set_position" getter="get_position" default="Vector4(0, 0, 0, 0)">
			The local (parent-relative) position of this [Node4D]. This is the same as [code]transform.origin[/code].
		</member>
		<member name="scale" type="Vector4" setter="set_scale" getter="get_scale">
			The local (parent-relative) scale of this [Node4D]. This is the length of each basis vector.
		</member>
		<member name="visible" type="bool" setter="set_visible" getter="get_visible" default="true">
			Whether this [G4MFNode4D] is visible. This affects if 4D meshes are rendered or not, and affects all descendants of this node. The visibility of a node in the tree is determined by its own [member visible] property and the visibility of all its ancestors.
		</member>
	</members>
</class>
