<?xml version="1.0" encoding="UTF-8" ?>
<class name="BoxWireMesh4D" inherits="WireMesh4D" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../../doc/class.xsd">
	<brief_description>
		A 4D wireframe mesh representing a box.
	</brief_description>
	<description>
		BoxWireMesh4D is a 4D wireframe mesh representing a box. The box is centered at the origin and is axis-aligned by default. The box is defined by the [member size] property, which is the "diameter" size of the box in meters in 4D space.
	</description>
	<tutorials>
		<link title="Wikipedia Hypercube">https://en.wikipedia.org/wiki/Hypercube</link>
		<link title="Polytope Wiki Tesseract">https://polytope.miraheze.org/wiki/Tesseract</link>
	</tutorials>
	<methods>
		<method name="from_box_tetra_mesh" qualifiers="static">
			<return type="BoxWireMesh4D" />
			<param index="0" name="box_tetra_mesh" type="BoxTetraMesh4D" />
			<description>
				Creates a box wireframe mesh from a [BoxTetraMesh4D]. The box wireframe mesh will have the same size and material as the tetrahedral mesh.
			</description>
		</method>
		<method name="subdivide_box" qualifiers="const">
			<return type="ArrayWireMesh4D" />
			<param index="0" name="subdivision_segments" type="Vector4i" />
			<param index="1" name="fill_cells" type="bool" default="false" />
			<param index="2" name="breakup_edges" type="bool" default="false" />
			<description>
				Subdivides this 4D box wireframe mesh into multiple line segments. The [param subdivision_segments] parameter specifies the number of subdivisions along each axis (X, Y, Z, W).
				If [param fill_cells] is [code]true[/code], each 3D surface cell of the box will be densely filled with lines, effectively covering the 4D surface. When [param fill_cells] is [code]false[/code], only the boundary of each 3D cell will be filled, leaving gaps in the 4D surface, but still giving the impression of a solid surface when projected into 3D. This setting affects the visual appearance of the resulting mesh.
				If [param breakup_edges] is [code]true[/code], the wireframe lines of the box will be broken up into multiple segments. This setting is useful if you plan to animate vertices (such as a "wavy" effect), but if vertex animation is not required, keeping [param breakup_edges] set to [code]false[/code] will give better performance with the same visual result.
				Returns an [ArrayWireMesh4D] object representing the subdivided wireframe mesh. If the original box has a material, this will not be automatically copied.
			</description>
		</method>
		<method name="to_box_tetra_mesh" qualifiers="const">
			<return type="BoxTetraMesh4D" />
			<description>
				Converts this box wireframe mesh to a [BoxTetraMesh4D]. The tetrahedral mesh will have the same vertices and material as the wireframe mesh.
			</description>
		</method>
	</methods>
	<members>
		<member name="half_extents" type="Vector4" setter="set_half_extents" getter="get_half_extents">
			The half-extents of the box mesh in meters, also known as just "extents". This is the "radius" of the box. This is a wrapper around [member size] for situations where you want to use the extents instead of size. Since the box is centered at the origin, one vertex is located at the half-extents, and the rest have some of the components negated.
		</member>
		<member name="size" type="Vector4" setter="set_size" getter="get_size" default="Vector4(1, 1, 1, 1)">
			The size of the box mesh in meters. This is the "diameter" size of the box in 4D space, where each component is the size of the box in one of the 4 dimensions. This is the value that is stored internally.
		</member>
	</members>
</class>
